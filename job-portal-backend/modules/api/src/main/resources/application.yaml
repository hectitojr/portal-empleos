spring:
  application:
    name: job-portal-api
  profiles:
    default: dev
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  sql:
    init:
      mode: never            # ← Evita inicialización SQL automática; usamos Flyway

server:
  port: 8080

---
# ============ DEV ============
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5433/job_portal_dev?currentSchema=job_portal
    username: ${JP_DB_USER:jp_user}
    password: ${JP_DB_PASSWORD:jp_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate.default_schema: job_portal
      hibernate.format_sql: true
      hibernate.jdbc.time_zone: UTC
  flyway:
    enabled: true
    locations: classpath:db/migration
    default-schema: job_portal
    schemas: job_portal
    create-schemas: true
    validate-on-migrate: true
    baseline-on-migrate: false

security:
  jwt:
    # Fallback solo para DEV
    secret: ${JP_JWT_SECRET:MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=}
    issuer: job-portal
    access-ttl-seconds: 900
    refresh-ttl-seconds: 2592000

logging:
  level:
    org.springframework.security: DEBUG   # Solo en dev

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env   # env solo en dev
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true                      # Liveness/Readiness probes
  # base-path se queda por defecto (/actuator)

---
# ============ TEST ============
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:postgresql://localhost:5433/job_portal_test?currentSchema=job_portal
    username: ${JP_DB_USER:jp_user}
    password: ${JP_DB_PASSWORD:jp_pass}
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  flyway:
    enabled: true
    locations: classpath:db/migration
    default-schema: job_portal
    schemas: job_portal
    create-schemas: true
    validate-on-migrate: true

security:
  jwt:
    # Fallback solo para TEST
    secret: ${JP_JWT_SECRET:MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=}
    issuer: job-portal
    access-ttl-seconds: 900
    refresh-ttl-seconds: 2592000

logging:
  level:
    root: WARN
    org.springframework.test: INFO
    org.springframework.security: DEBUG

management:
  endpoint:
    health:
      probes:
        enabled: true

---
# ============ PROD ============
spring:
  config:
    activate:
      on-profile: prod
  threads:
    virtual:
      enabled: true              # ← Java 21: virtual threads (opcional pero recomendado)
  datasource:
    url: ${JP_DB_URL}
    username: ${JP_DB_USER}
    password: ${JP_DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate.default_schema: job_portal
      hibernate.jdbc.time_zone: UTC
  flyway:
    enabled: true
    locations: classpath:db/migration
    default-schema: job_portal
    schemas: job_portal
    create-schemas: true
    validate-on-migrate: true
    baseline-on-migrate: false
    clean-disabled: true         # ← Evita borrado accidental de esquema en prod

security:
  jwt:
    # Sin valor por defecto en PROD (requiere variable de entorno)
    secret: ${JP_JWT_SECRET}
    issuer: job-portal
    access-ttl-seconds: 900
    refresh-ttl-seconds: 2592000

logging:
  level:
    org.springframework.security: INFO

management:
  endpoints:
    web:
      exposure:
        include: health,info     # ← En prod, limitamos exposición
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true

server:
  port: ${PORT:8080}
  forward-headers-strategy: framework   # ← Detrás de proxy/CDN (X-Forwarded-*)
  compression:
    enabled: true                       # ← Respuestas comprimidas en prod